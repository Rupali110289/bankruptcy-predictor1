# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17qE0S6KaAYKTsoeD_88l6j1wsifK7uo0
"""

import streamlit as st
import pandas as pd
import joblib

# Load the saved Logistic Regression model
model = joblib.load("bankruptcy_model.pkl")

# Title
st.title("Bankruptcy Prediction App (Logistic Regression)")
st.markdown("Predicts if a company is at risk of bankruptcy based on risk features.")

# Sidebar Inputs
st.sidebar.header("Input Risk Features")
options = ["low", "medium", "high"]

features_dict = {
    "industrial_risk": st.sidebar.selectbox("Industrial Risk", options),
    "management_risk": st.sidebar.selectbox("Management Risk", options),
    "financial_flexibility": st.sidebar.selectbox("Financial Flexibility", options),
    "credibility": st.sidebar.selectbox("Credibility", options),
    "competitiveness": st.sidebar.selectbox("Competitiveness", options),
    "operating_risk": st.sidebar.selectbox("Operating Risk", options),
}

# Encode the inputs
encode = {"low": 0, "medium": 1, "high": 2}
features_encoded = pd.DataFrame([[encode[val] for val in features_dict.values()]],
                                columns=features_dict.keys())

# Predict
if st.button("Predict Bankruptcy"):
    prediction = model.predict(features_encoded)[0]
    probability = model.predict_proba(features_encoded)[0][1]

    st.subheader("Prediction Result:")
    if prediction == 1:
        st.error(f"ðŸ”´ Bankruptcy Likely (Confidence: {probability:.2f})")
    else:
        st.success(f"ðŸŸ¢ No Bankruptcy Risk (Confidence: {1 - probability:.2f})")

# Commented out IPython magic to ensure Python compatibility.
# %pip install streamlit